package ch02_basicprogramming.unit02_identifier;

/*
    - 식별자 
        : 변수, 클래스명, 인터페이스명, 메소드명, 패키지명 등
*/

public class Ex01_Identifier {
	public static void main(String[] args) {
		String name = "Vincent";
		
	    // String name = "Vincent"; 
		// === Compile error ===
	    	//     - 동일한 블럭내에서는 동일한 변수명 선언 불가
		
		// String #name = "Vincent"; 
		// === Compile error ===
	    	//     - #과 같은 특수문자 사용 불가
		
		
	    /* --------------------------------------------------------------------------------

            	- 식별자는 유니코드 자바 레터로 시작하고, 유니코드 자바 레터와 숫자로 구성
                	- 유니코드 자바 레터: 'A' ~ 'Z', 'a' ~ 'z', '_', '$', 각국 언어
    		    	- 유니코드 숫자: '0' ~ '9'
    		    
	    -------------------------------------------------------------------------------- */
		
		
		String _tel = "010-1111-1111";
		String 주소 = "LA"; 
		// ***** 가능은 하지만, 추천하지 않는다! (avoid using non-English identifiers)
		    // 유지보수나 협업 시 혼란을 줄 수 있음
		
		// String int = "test"; 
		// === Compile error ===
	    	//    - 예약어는 식별자로 사용 불가
		
		int $age = 20;
		
		// int a-10 = 10; 
		// === Compile error ===
	    	//     - '_'와 '$'를 제외하고 특수문자는 사용할 수 없다

		// int a~10 = 20; 
		// === Compile error ===
	    	//     - '_'와 '$'를 제외하고 특수문자는 사용할 수 없다

		System.out.println(name); // copy: option + command + ↓
		System.out.println(_tel);
		System.out.println(주소);
		System.out.println($age);
	}	
}


/* CONCEPT -------------------------------------------------------------------------------------------------------------

    - 식별자(identifier)는 변수, 클래스, 인터페이스, 메서드, 패키지의 이름
    - 반드시 유효한 문자(자바 언어에서 허용하는 문자)로 시작
        - 예: 영어 대소문자, '_', '$', 한글 등
    - 첫 글자 이후에는 숫자도 포함 가능
    - 예약어는 사용할 수 없음
    - `#`, `~`, `-` 같은 특수문자는 사용할 수 없음

--------------------------------------------------------------------------------------------------------------------- */
