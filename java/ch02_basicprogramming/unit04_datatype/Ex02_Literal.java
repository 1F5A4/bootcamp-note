package ch02_basicprogramming.unit04_datatype;

/* 
    - 정수형 리터널
        - Literal 
            : 그 자체로 값(데이터)를 의미함, 변수에 대입되는 '있는 그대로의 값'
*/

public class Ex02_Literal {
	public static void main(String[] args) {
		 int a = 0b101; // 5, 숫자 앞 0b: 2진수
		
		// a = 0b201; 
		// === Compile error === 
		//     - 2진수에는 2가 없음
		
		int b = 0101; // 65, 숫자 앞에 0: 8진수
		int c = 101; // 10진수
		int d = 0x101; // 16진수, 257
		int e = 0xAB; // 16진수
		
		// int f = AB;
		// === Compile error === 
		//     - AB가 정의되지 않은 식별자
		//     - 문자 X, 변수 X, 상수 X = 그냥 '없는 이름'
		
		int f = 1_0_1; // 10진수 101, '_'를 넣어서 각 자리수 구분 가능
		long g = 101L; // long형 
		
		System.out.println(a + ", " + b + ", " + c);
		System.out.println(d + ", " + e);
		System.out.println(f);
		System.out.println(g);
	}
}


/* CONCEPT -------------------------------------------------------------------------------------------------------------

    1. Literal
        - 그 자체로 값(데이터)를 의미함
        - 변수에 대입되는 '있는 그대로의 값'
         
    2. 정수형 리터럴의 진법 표현
        - 2진수: 숫자 앞에 `0b` 또는 `0B` (`0b101` = 5)
            - 2진수에는 0과 1만 사용 가능
            - 잘못된 숫자 사용 시 컴파일 에러
    
        - 8진수: 숫자 앞에 `0` (`0101` = 65)
            - 0~7까지 사용 가능
    
        - 10진수: 일반적인 정수 입력 (`101` = 101)
    
        - 16진수: 숫자 앞에 `0x` 또는 `0X` (`0xAB` = 171, `0x101` = 257)
            - 0~9, A~F 사용 (A=10, F=15)
    
    3. 밑줄 `_`을 사용한 리터럴
        - 자바 7부터 사용 가능
        - 숫자 구분자 역할만 함, 실제 값에는 영향 없음
            - `1_0_1` = 101
    
    4. long 리터럴
        - 숫자 뒤에 `L` 또는 `l` 붙여서 long 타입으로 표현
            - 101L, 101l

--------------------------------------------------------------------------------------------------------------------- */
